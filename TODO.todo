
http://docs.railsbridge.org/intro-to-rails:

  ✔ 1. Create Your New Application @done (15-10-05 17:17)
    ✔ Project: suggestotron @done (15-10-05 17:17)
  ✔ 2. Add The Project To A Git Repo @done (15-10-05 17:17)
    ✔ Create a local git repository @done (15-10-05 17:17)
    ✔ Add all our files to the git repository @done (15-10-05 17:17)
  ✔ 3. Running Your Application Locally @done (15-10-05 17:19)
    ✔ Let's fire up the application locally @done (15-10-05 17:19)
  ✔ 4. Creating A Migration @done (15-10-05 17:20)
    ✔ Create a simple Table in the database for topics with a title and a description @done (15-10-05 17:20)
    ✔ Automatically generate the corresponding Scaffold in Rails (namely, the Model, the View, and the Controller). @done (15-10-05 17:20)
  ✔ 5. CRUD With Scaffolding @done (15-10-05 17:22)
    ✔ Create new records in the database @done (15-10-05 17:22)
    ✔ Read or show the records in the database @done (15-10-05 17:22)
    ✔ Update existing records @done (15-10-05 17:22)
    ✔ Destroy or delete records @done (15-10-05 17:22)
  ✔ 6. Setting The Default Page @done (15-10-05 17:25)
    ✔ Exploring Routes (optional) in console @done (15-10-05 17:24)
    ✔ >> app.topics_path @done (15-10-05 17:25)
    ✔ >> app.topics_url @done (15-10-05 17:25)
  ✔ 7. Deploying To Heroku @done (15-10-05 17:39)
    ✔ First-time setup @done (15-10-05 17:34)
      ✔ Step 1: Create a Heroku application @done (15-10-05 17:34)
      ✔ Step 2: Edit the Gemfile @done (15-10-05 17:34)
      ✔ Step 3: Apply the Gemfile changes @done (15-10-05 17:34)
      ✔ Step 4: Commit the Gemfile changes @done (15-10-05 17:34)
    ✔ Every time @done (15-10-05 17:39)
      ✔ Step 1: Commit any pending changes to git @done (15-10-05 17:39)
      ✔ Step 2: Push changes to Heroku @done (15-10-05 17:39)
      ✔ Step 3: Run database migrations on Heroku @done (15-10-05 17:39)
      ✔ Step 4: Visit your application @done (15-10-05 17:39)
  ✔ 7. Voting On Topics @done (15-10-05 17:40)
    ✔ Create a model for votes @done (15-10-05 17:40)
  ✔ 8. Hooking Up Votes And Topics @done (15-10-06 08:50)
    ✔ Step 1: Teach the Topic model about Votes @done (15-10-05 17:56)
    ✔ Step 2: Teach the Vote model about Topics @done (15-10-05 17:56)
    ✔ Step 3: Play around with Topics and Votes in the Rails console @done (15-10-06 08:50)
  ✔ Allow People To Vote @done (15-10-06 09:49)
    ✔ Step 1: Add a new controller action for voting @done (15-10-06 09:49)
    ✔ Step 2: Add a new route for voting @done (15-10-06 09:49)
    ✔ Step 3: Add the button to the view @done (15-10-06 09:49)
    ✔ Step 4: Confirm your changes in the browser @done (15-10-06 09:49)
  ✔ Redirect To The Topics List After Creating A New Topic @done (15-10-07 15:39)
    ✔ Step 1: Change the topics controller @done (15-10-07 15:39)
    ✔ Step 2: Change the topics index view @done (15-10-07 15:39)
  ✔ Make The Topic Title A Link @done (15-10-07 15:42)
    ✔ Don't show the description on the list page @done (15-10-07 15:42)
    ✔ Make the title a link and when it's clicked show the description @done (15-10-07 15:42)
  ✔ Clean Up Links On The Topics List @done (15-10-07 15:44)
      ✔ Remove the 'show' link @done (15-10-07 15:44)
      ✔ Remove the 'edit' link @done (15-10-07 15:44)
      ✔ Change 'destroy' to 'delete' @done (15-10-07 15:44)
  
  ☐ Extra Credit
    ✔ Add a downvote button that does the opposite of what the upvote button does @done (15-10-07 15:53)
    ☐ Sort topics by their number of votes
    ☐ Add an 'about' page, linked from the bottom of the Suggestotron topics list. Link back to the Topics list from the About page so users don't get stranded.
    ☐ If your class has a lot of time left over:.
      ☐ Users should be allowed to vote only once: give votes a user_id and allow a user to have voted on each topic only once. But wait, what is a 'user' in our system? Get a volunteer to introduce everyone to Devise, a simple way to add authentication to a Rails application.
      ☐ Users should be able to give a post a 'negative' vote instead of a positive one. How might you represent that in this system?





